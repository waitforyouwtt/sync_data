<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.dao.DaDataAuthRuleDao">

    <resultMap type="com.yh.entity.DaDataAuthRule" id="DaDataAuthRuleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productCode" column="product_code" jdbcType="VARCHAR"/>
        <result property="dataAuthId" column="data_auth_id" jdbcType="INTEGER"/>
        <result property="dataRuleId" column="data_rule_id" jdbcType="INTEGER"/>
        <result property="dataRuleName" column="data_rule_name" jdbcType="VARCHAR"/>
        <result property="dataRuleCode" column="data_rule_code" jdbcType="VARCHAR"/>
        <result property="dataRuleType" column="data_rule_type" jdbcType="VARCHAR"/>
        <result property="tenantCode" column="tenant_code" jdbcType="VARCHAR"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="DaDataAuthRuleMap">
        select
          id, product_code, data_auth_id, data_rule_id, data_rule_name, data_rule_code, data_rule_type, tenant_code, is_delete, created_by, updated_by, created_time, updated_time
        from o2o_support_idaas.da_data_auth_rule
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="DaDataAuthRuleMap">
        select
          id, product_code, data_auth_id, data_rule_id, data_rule_name, data_rule_code, data_rule_type, tenant_code, is_delete, created_by, updated_by, created_time, updated_time
        from o2o_support_idaas.da_data_auth_rule
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="DaDataAuthRuleMap">
        select
        id, product_code, data_auth_id, data_rule_id, data_rule_name, data_rule_code, data_rule_type, tenant_code,
        is_delete, created_by, updated_by, created_time, updated_time
        from o2o_support_idaas.da_data_auth_rule
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productCode != null and productCode != ''">
                and product_code = #{productCode}
            </if>
            <if test="dataAuthId != null">
                and data_auth_id = #{dataAuthId}
            </if>
            <if test="dataRuleId != null">
                and data_rule_id = #{dataRuleId}
            </if>
            <if test="dataRuleName != null and dataRuleName != ''">
                and data_rule_name = #{dataRuleName}
            </if>
            <if test="dataRuleCode != null and dataRuleCode != ''">
                and data_rule_code = #{dataRuleCode}
            </if>
            <if test="dataRuleType != null and dataRuleType != ''">
                and data_rule_type = #{dataRuleType}
            </if>
            <if test="tenantCode != null and tenantCode != ''">
                and tenant_code = #{tenantCode}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into o2o_support_idaas.da_data_auth_rule(product_code, data_auth_id, data_rule_id, data_rule_name, data_rule_code, data_rule_type, tenant_code, is_delete, created_by, updated_by, created_time, updated_time)
        values (#{productCode}, #{dataAuthId}, #{dataRuleId}, #{dataRuleName}, #{dataRuleCode}, #{dataRuleType}, #{tenantCode}, #{isDelete}, #{createdBy}, #{updatedBy}, #{createdTime}, #{updatedTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into o2o_support_idaas.da_data_auth_rule(product_code, data_auth_id, data_rule_id, data_rule_name,
        data_rule_code, data_rule_type, tenant_code, is_delete, created_by, updated_by, created_time, updated_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productCode}, #{entity.dataAuthId}, #{entity.dataRuleId}, #{entity.dataRuleName},
            #{entity.dataRuleCode}, #{entity.dataRuleType}, #{entity.tenantCode}, #{entity.isDelete},
            #{entity.createdBy}, #{entity.updatedBy}, #{entity.createdTime}, #{entity.updatedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into o2o_support_idaas.da_data_auth_rule(product_code, data_auth_id, data_rule_id, data_rule_name,
        data_rule_code, data_rule_type, tenant_code, is_delete, created_by, updated_by, created_time, updated_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productCode}, #{entity.dataAuthId}, #{entity.dataRuleId}, #{entity.dataRuleName},
            #{entity.dataRuleCode}, #{entity.dataRuleType}, #{entity.tenantCode}, #{entity.isDelete},
            #{entity.createdBy}, #{entity.updatedBy}, #{entity.createdTime}, #{entity.updatedTime})
        </foreach>
        on duplicate key update
        product_code = values(product_code) , data_auth_id = values(data_auth_id) , data_rule_id = values(data_rule_id)
        , data_rule_name = values(data_rule_name) , data_rule_code = values(data_rule_code) , data_rule_type =
        values(data_rule_type) , tenant_code = values(tenant_code) , is_delete = values(is_delete) , created_by =
        values(created_by) , updated_by = values(updated_by) , created_time = values(created_time) , updated_time =
        values(updated_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update o2o_support_idaas.da_data_auth_rule
        <set>
            <if test="productCode != null and productCode != ''">
                product_code = #{productCode},
            </if>
            <if test="dataAuthId != null">
                data_auth_id = #{dataAuthId},
            </if>
            <if test="dataRuleId != null">
                data_rule_id = #{dataRuleId},
            </if>
            <if test="dataRuleName != null and dataRuleName != ''">
                data_rule_name = #{dataRuleName},
            </if>
            <if test="dataRuleCode != null and dataRuleCode != ''">
                data_rule_code = #{dataRuleCode},
            </if>
            <if test="dataRuleType != null and dataRuleType != ''">
                data_rule_type = #{dataRuleType},
            </if>
            <if test="tenantCode != null and tenantCode != ''">
                tenant_code = #{tenantCode},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from o2o_support_idaas.da_data_auth_rule where id = #{id}
    </delete>

</mapper>