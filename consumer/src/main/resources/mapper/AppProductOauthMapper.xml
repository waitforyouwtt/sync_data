<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.dao.AppProductOauthDao">

    <resultMap type="com.yh.entity.AppProductOauth" id="AppProductOauthMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productCode" column="product_code" jdbcType="VARCHAR"/>
        <result property="redirectUrl" column="redirect_url" jdbcType="VARCHAR"/>
        <result property="authorizeUrl" column="authorize_url" jdbcType="VARCHAR"/>
        <result property="clientId" column="client_id" jdbcType="VARCHAR"/>
        <result property="clientSecret" column="client_secret" jdbcType="VARCHAR"/>
        <result property="grantType" column="grant_type" jdbcType="VARCHAR"/>
        <result property="tokenExpirationTime" column="token_expiration_time" jdbcType="INTEGER"/>
        <result property="refreshTokenExpirationTime" column="refresh_token_expiration_time" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AppProductOauthMap">
        select
          id, product_code, redirect_url, authorize_url, client_id, client_secret, grant_type, token_expiration_time, refresh_token_expiration_time, is_delete, created_by, updated_by, created_time, updated_time
        from o2o_support_idaas.app_product_oauth
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AppProductOauthMap">
        select
          id, product_code, redirect_url, authorize_url, client_id, client_secret, grant_type, token_expiration_time, refresh_token_expiration_time, is_delete, created_by, updated_by, created_time, updated_time
        from o2o_support_idaas.app_product_oauth
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AppProductOauthMap">
        select
        id, product_code, redirect_url, authorize_url, client_id, client_secret, grant_type, token_expiration_time,
        refresh_token_expiration_time, is_delete, created_by, updated_by, created_time, updated_time
        from o2o_support_idaas.app_product_oauth
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productCode != null and productCode != ''">
                and product_code = #{productCode}
            </if>
            <if test="redirectUrl != null and redirectUrl != ''">
                and redirect_url = #{redirectUrl}
            </if>
            <if test="authorizeUrl != null and authorizeUrl != ''">
                and authorize_url = #{authorizeUrl}
            </if>
            <if test="clientId != null and clientId != ''">
                and client_id = #{clientId}
            </if>
            <if test="clientSecret != null and clientSecret != ''">
                and client_secret = #{clientSecret}
            </if>
            <if test="grantType != null and grantType != ''">
                and grant_type = #{grantType}
            </if>
            <if test="tokenExpirationTime != null">
                and token_expiration_time = #{tokenExpirationTime}
            </if>
            <if test="refreshTokenExpirationTime != null">
                and refresh_token_expiration_time = #{refreshTokenExpirationTime}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="createdTime != null">
                and created_time = #{createdTime}
            </if>
            <if test="updatedTime != null">
                and updated_time = #{updatedTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into o2o_support_idaas.app_product_oauth(product_code, redirect_url, authorize_url, client_id, client_secret, grant_type, token_expiration_time, refresh_token_expiration_time, is_delete, created_by, updated_by, created_time, updated_time)
        values (#{productCode}, #{redirectUrl}, #{authorizeUrl}, #{clientId}, #{clientSecret}, #{grantType}, #{tokenExpirationTime}, #{refreshTokenExpirationTime}, #{isDelete}, #{createdBy}, #{updatedBy}, #{createdTime}, #{updatedTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into o2o_support_idaas.app_product_oauth(product_code, redirect_url, authorize_url, client_id,
        client_secret, grant_type, token_expiration_time, refresh_token_expiration_time, is_delete, created_by,
        updated_by, created_time, updated_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productCode}, #{entity.redirectUrl}, #{entity.authorizeUrl}, #{entity.clientId},
            #{entity.clientSecret}, #{entity.grantType}, #{entity.tokenExpirationTime},
            #{entity.refreshTokenExpirationTime}, #{entity.isDelete}, #{entity.createdBy}, #{entity.updatedBy},
            #{entity.createdTime}, #{entity.updatedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into o2o_support_idaas.app_product_oauth(product_code, redirect_url, authorize_url, client_id,
        client_secret, grant_type, token_expiration_time, refresh_token_expiration_time, is_delete, created_by,
        updated_by, created_time, updated_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productCode}, #{entity.redirectUrl}, #{entity.authorizeUrl}, #{entity.clientId},
            #{entity.clientSecret}, #{entity.grantType}, #{entity.tokenExpirationTime},
            #{entity.refreshTokenExpirationTime}, #{entity.isDelete}, #{entity.createdBy}, #{entity.updatedBy},
            #{entity.createdTime}, #{entity.updatedTime})
        </foreach>
        on duplicate key update
        product_code = values(product_code) , redirect_url = values(redirect_url) , authorize_url =
        values(authorize_url) , client_id = values(client_id) , client_secret = values(client_secret) , grant_type =
        values(grant_type) , token_expiration_time = values(token_expiration_time) , refresh_token_expiration_time =
        values(refresh_token_expiration_time) , is_delete = values(is_delete) , created_by = values(created_by) ,
        updated_by = values(updated_by) , created_time = values(created_time) , updated_time = values(updated_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update o2o_support_idaas.app_product_oauth
        <set>
            <if test="productCode != null and productCode != ''">
                product_code = #{productCode},
            </if>
            <if test="redirectUrl != null and redirectUrl != ''">
                redirect_url = #{redirectUrl},
            </if>
            <if test="authorizeUrl != null and authorizeUrl != ''">
                authorize_url = #{authorizeUrl},
            </if>
            <if test="clientId != null and clientId != ''">
                client_id = #{clientId},
            </if>
            <if test="clientSecret != null and clientSecret != ''">
                client_secret = #{clientSecret},
            </if>
            <if test="grantType != null and grantType != ''">
                grant_type = #{grantType},
            </if>
            <if test="tokenExpirationTime != null">
                token_expiration_time = #{tokenExpirationTime},
            </if>
            <if test="refreshTokenExpirationTime != null">
                refresh_token_expiration_time = #{refreshTokenExpirationTime},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from o2o_support_idaas.app_product_oauth where id = #{id}
    </delete>

</mapper>